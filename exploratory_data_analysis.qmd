---
title: "Homework 5"
author: "Nathan Honea"
format: html
editor_options: 
  chunk_output_type: console
---

# Task 1

## Read in Data and Modify


```{r}
library(tidyverse)

# use the code provided
d1 <- read.table("student+performance/student/student-mat.csv", sep = ";", header = TRUE)

d2 <- read.table("student+performance/student/student-por.csv", sep=";", header = TRUE)

d3 <- merge(d1, d2, by = c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet"))

print(nrow(d3)) # 382 students


# use tidyverse functions
mat_data <- read_csv2("student+performance/student/student-mat.csv")

por_data <- read_csv2("student+performance/student/student-por.csv")

combined_data_1 <- inner_join(mat_data, 
                            por_data, 
                            by = c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "nursery", "internet"))
```

We get a warning when combining the data via `inner_join()` on only these variables, say there is an unexpected many-to-many relationship between our tibbles. 

```{r}
combined_data <- inner_join(mat_data, 
                            por_data, 
                            by = c("school", "sex", "age", "address", "famsize", "Pstatus", "Medu", "Fedu", "Mjob", "Fjob", "reason", "guardian", "traveltime", "studytime", "failures", "schoolsup", "famsup", "activities", "nursery", "higher", "internet", "romantic", "famrel", "freetime", "goout", "Dalc", "Walc", "health"))

print(nrow(combined_data)) 

# change the sex, studytime, romantic, and goout variables to factors using the mutate function in all of the data sets
mat_data <- mat_data |> 
  mutate(
    sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
    studytime = factor(studytime, levels = c(1, 2, 3, 4), labels = c("<2 hours", "2-5 hours", "5-10 hours", ">10 hours")),
    romantic = factor(romantic, levels = c("no", "yes"), labels = c("No", "Yes")),
    goout = factor(goout, levels = c(1, 2, 3, 4, 5), labels = c("Very Low", "Low", "Medium", "High", "Very High"))
  )

por_data <- por_data |> 
  mutate(
    sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
    studytime = factor(studytime, levels = c(1, 2, 3, 4), labels = c("<2 hours", "2-5 hours", "5-10 hours", ">10 hours")),
    romantic = factor(romantic, levels = c("no", "yes"), labels = c("No", "Yes")),
    goout = factor(goout, levels = c(1, 2, 3, 4, 5), labels = c("Very Low", "Low", "Medium", "High", "Very High"))
  )

combined_data <- combined_data |> 
  mutate(
    sex = factor(sex, levels = c("F", "M"), labels = c("Female", "Male")),
    studytime = factor(studytime, levels = c(1, 2, 3, 4), labels = c("<2 hours", "2-5 hours", "5-10 hours", ">10 hours")),
    romantic = factor(romantic, levels = c("no", "yes"), labels = c("No", "Yes")),
    goout = factor(goout, levels = c(1, 2, 3, 4, 5), labels = c("Very Low", "Low", "Medium", "High", "Very High"))
  )
```

# Task 2

## Summarize the Data (Very Basic EDA)

```{r}
# look at how the combined data is stored
combined_data
str(combined_data)

# look at the number of missing values in each variable of the combined data
colSums(is.na(combined_data))
```

There are no missing data values in our data set!

### Categorical Variables

#### One-Way Contingency Tables

```{r}
# create one-way contingency tables of the combined data based on the factor variables
# contingency table on sex variable
table(combined_data$sex)
```

Based on the table, 146 of the students in our data are male.

```{r}
# contingency table on studytime variable
table(combined_data$studytime)
```

Based on the table, 157 of the students in our data study between 2 and 5 hours per week.

```{r}
# contingency table on romantic variable
table(combined_data$romantic)
```

Based on the table, 99 of the students in our data are in a romantic relationship.

```{r}
# contingency table on goout variable
table(combined_data$goout)
```

Based on the table, 40 of the students in our data go out with friends a very high amount.

#### Two-Way Contingency Tables
```{r}
# create two-way contingency tables of the combined data based on the factor variables
# contingency table on sex and studytime variables
table(combined_data$sex, combined_data$studytime)
```

Based on the table, 42 of the students in our data are females who study 5 to 10 hours per week.

```{r}
# contingency table on sex and romantic variables
table(combined_data$sex, combined_data$romantic)
```

Based on the table, 105 of the students in our data are males who are not in a romantic relationship.

```{r}
# contingency table on sex and goout variables
table(combined_data$sex, combined_data$goout)
```

Based on the table, 39 of the students in our data are females who go out with their friends a high (but not very high) amount.

```{r}
# contingency table on studytime and romantic variables
table(combined_data$studytime, combined_data$romantic)
```

Based on the table, 22 of the students in our data are in romantic relationships and study 5 to 10 hours per week.

```{r}
# contingency table on studytime and goout variables
table(combined_data$studytime, combined_data$goout)
```

Based on the table, 41 of the students in our data go out with their friends a high (but not very high) amount and study 2 to 5 hours per week.

```{r}
# contingency table on romantic and goout variables
table(combined_data$romantic, combined_data$goout)
```

Based on the table, 29 of the students in our data are in a romantic relationship and go out with friends a low (but not very low) amount.

#### Three-Way Contingency Tables
```{r}
# create three-way contingency tables of the combined data based on the factor variables
# contingency table on sex, studytime, and romantic variables
table(combined_data$sex, combined_data$studytime, combined_data$romantic)
```

Based on the table, 27 of the students in our data are females who study 5 to 10 hours per week and are not in a romantic relationship.

```{r}
# contingency table on sex, studytime, and goout variables
table(combined_data$sex, combined_data$studytime, combined_data$goout)
```

Based on the table, 30 of the students in our data are females who study 2 to 5 hours per week and go out with friends a medium amount.

```{r}
# contingency table on sex, romantic, and goout variables
table(combined_data$sex, combined_data$romantic, combined_data$goout)
```

Based on the table, 33 of the students in our data are males who are not in a romantic relationship and go out with friends a medium amount.

```{r}
# contingency table on studytime, romantic, and goout variables
table(combined_data$studytime, combined_data$romantic, combined_data$goout)
```

Based on the table, 31 of the students in our data study 2 to 5 hours per week, are not in a romantic relationship, and go out with friends a high (but not very high) amount of the time.

#### Conditional Two-Way Tables

```{r}
# create a conditional two-way table by subsetting using filter and then table()
# table of sex and romantic variables conditioned on goout being at the "High" level
only_high_goout <- combined_data |> 
  filter(goout == "High")

table(only_high_goout$sex, only_high_goout$romantic)

# create a conditional two-way table by subsetting a three-way table
# create the same table as above
cond_two_way <- table(combined_data$sex, combined_data$romantic, combined_data$goout)
cond_two_way[, , "High"]
```

#### Two-Way Contingency Table with dplyr

```{r}
# create a two-way contingency table of the combined data on the sex and studytime variables using group_by() and summarize() from dplyr
combined_data |> 
  group_by(sex, studytime) |> 
  summarise(count = n()) |> 
  pivot_wider(names_from = studytime, values_from = count) # pivot_wider() makes the table look similar to the one created with the table() function
```

#### Stacked and Side-by-Side Bar Graphs
```{r}
# create a stacked bar plot based on sex and studytime
ggplot(data = combined_data, aes(x = studytime, fill = sex)) + 
  geom_bar() + 
  labs(x = "Study Time", 
       y = "Count",
       title = "Stacked Bar Graph",
       subtitle = "Of Portuguese Student Data Grouped by Study Time and Sex") + 
  scale_fill_discrete("Sex")


# create a side-by-side bar graph based on the same variables
ggplot(data = combined_data, aes(x = studytime, fill = sex)) + 
  geom_bar(position = "dodge") + 
  labs(x = "Study Time", 
       y = "Count",
       title = "Side-by-Side Bar Graph",
       subtitle = "Of Portuguese Student Data Grouped by Study Time and Sex") + 
  scale_fill_discrete("Sex")
```

### Numeric Variables

#### Find Measures of Center and Spread
```{r}
# find the mean and standard deviation of student's ages, G1 math and G3 math scores
combined_data |> 
  summarize(
    mean_age = mean(age),
    sd_age = sd(age),
    mean_G1_math = mean(G1.x),
    sd_G1_math = sd(G1.x),
    mean_G3_math = mean(G3.x),
    sd_G3_math = sd(G3.x)
)

# find the mean and standard deviation of student's ages, G1 math and G3 math scores, subsetting to only include students with more than 3 abscences in math
combined_data |> 
  filter(absences.x > 3) |> 
  summarize(
    mean_age = mean(age),
    sd_age = sd(age),
    mean_G1_math = mean(G1.x),
    sd_G1_math = sd(G1.x),
    mean_G3_math = mean(G3.x),
    sd_G3_math = sd(G3.x)
)

# find the mean and standard deviation of student's ages, G1 math and G3 math scores across sex as a grouping variable
combined_data |> 
  group_by(sex) |> 
  summarize(
    mean_age = mean(age),
    sd_age = sd(age),
    mean_G1_math = mean(G1.x),
    sd_G1_math = sd(G1.x),
    mean_G3_math = mean(G3.x),
    sd_G3_math = sd(G3.x)
)

# find the mean and standard deviation of student's ages, G1 math and G3 math scores across sex and study time as a grouping variable
combined_data |> 
  group_by(sex, studytime) |> 
  summarize(
    mean_age = mean(age),
    sd_age = sd(age),
    mean_G1_math = mean(G1.x),
    sd_G1_math = sd(G1.x),
    mean_G3_math = mean(G3.x),
    sd_G3_math = sd(G3.x)
)
```

#### Correlation Matrix

```{r}
# create a correlation matrix between all numeric variables
combined_data |> 
  select(age, absences.x, absences.y, G1.x, G1.y, G2.x, G2.y, G3.x, G3.y) |> 
  cor(use = "pairwise.complete.obs")
```

#### Numeric Plots

```{r}

```